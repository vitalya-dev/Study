1
00:00:00,000 --> 00:00:02,429
hello this week we're going to start

2
00:00:02,429 --> 00:00:04,740
taking a look at splines and how you as

3
00:00:04,740 --> 00:00:06,390
a coder can use them to enrich your

4
00:00:06,390 --> 00:00:09,030
applications and games in short splines

5
00:00:09,030 --> 00:00:10,230
are a way of algorithmically

6
00:00:10,230 --> 00:00:12,420
representing a curve and even though you

7
00:00:12,420 --> 00:00:13,920
might not think you need curves in your

8
00:00:13,920 --> 00:00:15,900
application you'll be surprised just how

9
00:00:15,900 --> 00:00:17,880
useful they can be for example if you're

10
00:00:17,880 --> 00:00:19,949
making a game why do your game objects

11
00:00:19,949 --> 00:00:21,750
need to move in straight lines they can

12
00:00:21,750 --> 00:00:23,279
look a lot more fluid and natural if

13
00:00:23,279 --> 00:00:25,050
they follow a curvature what if you're

14
00:00:25,050 --> 00:00:27,029
interpolating between two points again

15
00:00:27,029 --> 00:00:29,539
don't use a straight line use a spline

16
00:00:29,539 --> 00:00:31,560
you've probably already encountered

17
00:00:31,560 --> 00:00:33,570
splines and don't really realize it so

18
00:00:33,570 --> 00:00:35,430
here in humble paint this is a spline

19
00:00:35,430 --> 00:00:37,950
and we can position the curvature and

20
00:00:37,950 --> 00:00:39,239
you probably experienced the frustration

21
00:00:39,239 --> 00:00:41,550
of trying to curve it just how you

22
00:00:41,550 --> 00:00:44,040
wanted it always seems to have a mind of

23
00:00:44,040 --> 00:00:46,980
its own we see from the paint example

24
00:00:46,980 --> 00:00:49,379
that we'll have two control points and a

25
00:00:49,379 --> 00:00:51,750
third one which is used as an indication

26
00:00:51,750 --> 00:00:53,579
of where the curvature should tend

27
00:00:53,579 --> 00:00:56,520
towards and if we were trying to

28
00:00:56,520 --> 00:00:58,350
represent a longer path using more

29
00:00:58,350 --> 00:01:01,020
points in this fashion we have to pretty

30
00:01:01,020 --> 00:01:02,789
much guess where those control points

31
00:01:02,789 --> 00:01:03,329
need to be

32
00:01:03,329 --> 00:01:04,920
we'll also face issues about what

33
00:01:04,920 --> 00:01:06,689
happens when you try to join two splines

34
00:01:06,689 --> 00:01:08,729
if we have a look at the Wikipedia

35
00:01:08,729 --> 00:01:10,890
article for splines we'll see that it's

36
00:01:10,890 --> 00:01:13,619
actually quite mathematical and this can

37
00:01:13,619 --> 00:01:15,180
make it inaccessible for the one loan

38
00:01:15,180 --> 00:01:16,920
coders out there who just want to get

39
00:01:16,920 --> 00:01:19,490
some curvature into their application

40
00:01:19,490 --> 00:01:21,869
that said the maps behind these things

41
00:01:21,869 --> 00:01:23,520
is quite fantastic and we'll be looking

42
00:01:23,520 --> 00:01:25,650
at some of it when it comes to

43
00:01:25,650 --> 00:01:28,229
programming we rarely like guesswork so

44
00:01:28,229 --> 00:01:30,000
deciding where to put these control

45
00:01:30,000 --> 00:01:34,409
points is not ideal so we'll not use

46
00:01:34,409 --> 00:01:37,049
that type of spline instead the type of

47
00:01:37,049 --> 00:01:38,490
spline I'm going to be explaining in

48
00:01:38,490 --> 00:01:42,240
this video you can use multiple control

49
00:01:42,240 --> 00:01:46,079
points and the path is guaranteed to go

50
00:01:46,079 --> 00:01:48,740
through all of them

51
00:01:51,750 --> 00:01:53,490
and to use this I'm going to use a type

52
00:01:53,490 --> 00:01:56,600
of slime called a cat mole realm spline

53
00:01:56,600 --> 00:02:01,680
and an interesting fact there is the mr.

54
00:02:01,680 --> 00:02:04,170
cat mole in the cat Milgram here is one

55
00:02:04,170 --> 00:02:05,820
of the founders concurrent president of

56
00:02:05,820 --> 00:02:08,880
Pixar so this guy knows his stuff when

57
00:02:08,880 --> 00:02:11,820
it comes to computer graphics in its

58
00:02:11,820 --> 00:02:13,830
most basic form a capital R arm spline

59
00:02:13,830 --> 00:02:15,840
contains four points which are denoted

60
00:02:15,840 --> 00:02:17,610
here with the red blue orange and green

61
00:02:17,610 --> 00:02:19,890
dots justice gathers going with some of

62
00:02:19,890 --> 00:02:21,780
the notation we usually refer to as p0

63
00:02:21,780 --> 00:02:27,209
p1 p2 and p3 a camel runs flying will

64
00:02:27,209 --> 00:02:30,780
only generate a curve between p1 and p2

65
00:02:30,780 --> 00:02:36,780
and it uses p0 + p3 as a guide to what

66
00:02:36,780 --> 00:02:38,730
angle the curve should be going through

67
00:02:38,730 --> 00:02:44,070
the points p1 and p2 to find a point

68
00:02:44,070 --> 00:02:46,170
along the spline we usually use a value

69
00:02:46,170 --> 00:02:49,590
T which begins at zero for point 1 and

70
00:02:49,590 --> 00:02:52,560
ends at 1 4 point 2 so we're accessing

71
00:02:52,560 --> 00:02:54,930
the curve segment in normalized space

72
00:02:54,930 --> 00:02:57,060
and the nice thing about Catmull ROM

73
00:02:57,060 --> 00:02:59,370
splines is the points can be

74
00:02:59,370 --> 00:03:01,050
multi-dimensional so even though it

75
00:03:01,050 --> 00:03:03,510
traditionally would have X&Y we could

76
00:03:03,510 --> 00:03:05,850
have more dimensions afterwards and the

77
00:03:05,850 --> 00:03:07,680
mathematics doesn't change just scales

78
00:03:07,680 --> 00:03:09,180
up so I'm going to try and start

79
00:03:09,180 --> 00:03:10,739
explaining how a spline works without

80
00:03:10,739 --> 00:03:12,269
getting involved with the mathematics

81
00:03:12,269 --> 00:03:14,100
just yet and I find it useful to think

82
00:03:14,100 --> 00:03:15,780
about the points as being the center of

83
00:03:15,780 --> 00:03:18,750
influential circles that guide our point

84
00:03:18,750 --> 00:03:23,760
T so simply put as we approach p2 we're

85
00:03:23,760 --> 00:03:28,950
more influenced by p2 and we become less

86
00:03:28,950 --> 00:03:31,709
influenced by P 1 because we're further

87
00:03:31,709 --> 00:03:34,290
away so of course if the point lies

88
00:03:34,290 --> 00:03:37,440
directly in the middle of p1 and p2 were

89
00:03:37,440 --> 00:03:42,170
equally influenced by both the points

90
00:03:44,569 --> 00:03:45,829
and if the point on the curve are

91
00:03:45,829 --> 00:03:47,360
interested in happens to lie on one of

92
00:03:47,360 --> 00:03:50,390
our control points were 100% influenced

93
00:03:50,390 --> 00:03:53,060
by that control point and nothing comes

94
00:03:53,060 --> 00:03:54,980
from the other control point so what a

95
00:03:54,980 --> 00:03:58,069
points p 0 and P 3/4 then well if we

96
00:03:58,069 --> 00:03:59,390
just had the point P 1 and P 2

97
00:03:59,390 --> 00:04:01,609
influencing the curve we would get a

98
00:04:01,609 --> 00:04:03,950
straight line which you don't need me to

99
00:04:03,950 --> 00:04:06,590
tell you isn't a curve so in a similar

100
00:04:06,590 --> 00:04:08,510
way to the circles of influence from P 1

101
00:04:08,510 --> 00:04:14,060
and P 2 p 0 and P 3 also are influencing

102
00:04:14,060 --> 00:04:15,650
our point on the curve but in a much

103
00:04:15,650 --> 00:04:18,978
more mild way so whereas we saw P 1 and

104
00:04:18,978 --> 00:04:26,120
P 2 attract our target points p 0 and P

105
00:04:26,120 --> 00:04:32,419
3 repel the target point and we can see

106
00:04:32,419 --> 00:04:34,430
in this example that the curve pushes

107
00:04:34,430 --> 00:04:37,699
upwards using the desmos comm graphing

108
00:04:37,699 --> 00:04:39,470
calculator we can have a look at the

109
00:04:39,470 --> 00:04:42,410
maths behind the spline consider the x

110
00:04:42,410 --> 00:04:44,360
axis along the bottom to represent our

111
00:04:44,360 --> 00:04:46,580
variable T in normalized space so it

112
00:04:46,580 --> 00:04:49,940
goes from 0 to 1 and if we remember for

113
00:04:49,940 --> 00:04:53,810
our point that was blue which is a p1 we

114
00:04:53,810 --> 00:04:56,479
want to have a full influence when we're

115
00:04:56,479 --> 00:04:58,340
on the point and we want to have no

116
00:04:58,340 --> 00:05:01,039
influence at all when we're on the other

117
00:05:01,039 --> 00:05:05,060
extreme of the curve in this case p2 so

118
00:05:05,060 --> 00:05:07,190
in this way consider the y-axis to be

119
00:05:07,190 --> 00:05:09,409
the amount of influence the point has on

120
00:05:09,409 --> 00:05:11,419
our point T going around the curve

121
00:05:11,419 --> 00:05:14,270
segment naturally then it follows that

122
00:05:14,270 --> 00:05:17,360
our orange point which was p2 has an

123
00:05:17,360 --> 00:05:19,580
opposite looking curve so it is not

124
00:05:19,580 --> 00:05:22,699
influenced at all by p1 but as we

125
00:05:22,699 --> 00:05:25,370
increase our T point along the curve

126
00:05:25,370 --> 00:05:27,650
segment it becomes fully influenced by

127
00:05:27,650 --> 00:05:30,380
the time it gets to point 2 let's

128
00:05:30,380 --> 00:05:32,900
consider p0 now this one looks a little

129
00:05:32,900 --> 00:05:35,180
strange positive influence in the Y

130
00:05:35,180 --> 00:05:38,539
Direction is attraction ie we bend the

131
00:05:38,539 --> 00:05:42,289
curve towards the point so p0 the red

132
00:05:42,289 --> 00:05:45,380
point here goes negative which pushes

133
00:05:45,380 --> 00:05:47,720
the point away as I showed with the

134
00:05:47,720 --> 00:05:50,960
arrows before and likewise we have a

135
00:05:50,960 --> 00:05:54,110
mirror image curve for p3 the final

136
00:05:54,110 --> 00:05:56,419
point all of these functions are cubics

137
00:05:56,419 --> 00:05:58,460
so this is a cubic spline

138
00:05:58,460 --> 00:06:00,680
if you've ever tried to use the pen tool

139
00:06:00,680 --> 00:06:02,270
in Photoshop you'll know why this is

140
00:06:02,270 --> 00:06:07,250
important at each spline control point

141
00:06:07,250 --> 00:06:11,210
we can specify a gradient but the curve

142
00:06:11,210 --> 00:06:12,680
doesn't necessarily go through the

143
00:06:12,680 --> 00:06:15,110
points this makes this tool incredibly

144
00:06:15,110 --> 00:06:20,990
frustrating to use but it does highlight

145
00:06:20,990 --> 00:06:22,730
one of the limitations of the Catmull

146
00:06:22,730 --> 00:06:25,190
arm spline that we cannot specify the

147
00:06:25,190 --> 00:06:27,350
gradient through a point the gradient is

148
00:06:27,350 --> 00:06:30,620
always calculated by the position of its

149
00:06:30,620 --> 00:06:33,170
neighboring points these equations are

150
00:06:33,170 --> 00:06:35,360
only valid for one component of our

151
00:06:35,360 --> 00:06:37,970
point vector so in 2d space we'd have to

152
00:06:37,970 --> 00:06:40,250
calculate all of these for X and all of

153
00:06:40,250 --> 00:06:42,920
these for y to give us the XY point on

154
00:06:42,920 --> 00:06:45,080
the curve segment I think it's time to

155
00:06:45,080 --> 00:06:46,580
start putting these into practice so

156
00:06:46,580 --> 00:06:48,500
I've created a new console project and

157
00:06:48,500 --> 00:06:50,360
I'm going to use our old friend the OLC

158
00:06:50,360 --> 00:06:52,700
console game engine so we can visualize

159
00:06:52,700 --> 00:06:54,830
the splines as most of my viewers will

160
00:06:54,830 --> 00:06:57,350
know by now the OLC console game engine

161
00:06:57,350 --> 00:06:59,480
just simply wraps up the console in a

162
00:06:59,480 --> 00:07:00,890
way that it repeatedly displays

163
00:07:00,890 --> 00:07:03,200
information to the screen and it also

164
00:07:03,200 --> 00:07:05,420
accepts some user input and we need to

165
00:07:05,420 --> 00:07:07,610
override two functions in this class the

166
00:07:07,610 --> 00:07:09,560
unuse are create and on user update

167
00:07:09,560 --> 00:07:11,750
functions I'm going to create a console

168
00:07:11,750 --> 00:07:13,850
application that's 160 characters wide

169
00:07:13,850 --> 00:07:16,460
by 80 characters high and each character

170
00:07:16,460 --> 00:07:18,230
in the console is going to be 10 by 10

171
00:07:18,230 --> 00:07:20,870
pixels let's start by creating a

172
00:07:20,870 --> 00:07:26,480
structure that represents a 2d point so

173
00:07:26,480 --> 00:07:28,580
I'm just going to have an X and a y

174
00:07:28,580 --> 00:07:30,620
coordinate I'm going to create another

175
00:07:30,620 --> 00:07:34,780
structure now to represent the spline

176
00:07:36,130 --> 00:07:38,810
and the spline is going to consist of a

177
00:07:38,810 --> 00:07:44,780
vector of points let's start by getting

178
00:07:44,780 --> 00:07:46,670
some of the visualization out of the way

179
00:07:46,670 --> 00:07:48,860
in my game engine class I'm going to

180
00:07:48,860 --> 00:07:54,830
need a spline object which I'm going to

181
00:07:54,830 --> 00:07:56,810
call path and in the unusal create

182
00:07:56,810 --> 00:07:58,880
function I'm going to populate that path

183
00:07:58,880 --> 00:08:00,980
with points so these are coordinates of

184
00:08:00,980 --> 00:08:02,960
console characters on the screen and

185
00:08:02,960 --> 00:08:05,450
they represent the control points in the

186
00:08:05,450 --> 00:08:07,610
spline there's only four of them now

187
00:08:07,610 --> 00:08:09,200
let's try to draw these to the screen

188
00:08:09,200 --> 00:08:10,520
first thing I'm going to do is clear the

189
00:08:10,520 --> 00:08:12,560
screen which I'm doing by drawing space

190
00:08:12,560 --> 00:08:14,930
to all characters then I want to iterate

191
00:08:14,930 --> 00:08:16,669
through all of the points and draw them

192
00:08:16,669 --> 00:08:18,650
to do this I'm going to use the fill

193
00:08:18,650 --> 00:08:22,669
function to draw one pixel either side

194
00:08:22,669 --> 00:08:24,710
what one character either side of all of

195
00:08:24,710 --> 00:08:27,169
the control points it's going to use the

196
00:08:27,169 --> 00:08:28,820
solid character and it's going to call

197
00:08:28,820 --> 00:08:31,280
them red this will give me a 3x3 block

198
00:08:31,280 --> 00:08:33,380
to represent a control point and in the

199
00:08:33,380 --> 00:08:35,450
middle of that 3 by 3 block I'm going to

200
00:08:35,450 --> 00:08:37,339
draw the index of that control point so

201
00:08:37,339 --> 00:08:38,570
we can see which ones which

202
00:08:38,570 --> 00:08:46,730
let's take a look perfect I want to move

203
00:08:46,730 --> 00:08:48,500
the control points around the screen so

204
00:08:48,500 --> 00:08:52,760
I'm going to create a variable that

205
00:08:52,760 --> 00:08:54,950
represents a point that's selected for

206
00:08:54,950 --> 00:08:57,830
movement we'll initialize it to 0 so

207
00:08:57,830 --> 00:08:59,690
let's handle a little bit of input from

208
00:08:59,690 --> 00:09:00,230
the user

209
00:09:00,230 --> 00:09:03,170
if the user presses the X key I want to

210
00:09:03,170 --> 00:09:05,870
increment my selected point variable but

211
00:09:05,870 --> 00:09:07,070
I'm also going to make sure that it

212
00:09:07,070 --> 00:09:08,660
doesn't go out to bounce so if it does

213
00:09:08,660 --> 00:09:11,660
it rotates it back round to 0 again I'm

214
00:09:11,660 --> 00:09:13,310
going to do the opposite with the Zed

215
00:09:13,310 --> 00:09:16,010
key which this time decrements the

216
00:09:16,010 --> 00:09:18,110
variable now I want to move the selected

217
00:09:18,110 --> 00:09:20,740
point around depending on the arrow keys

218
00:09:20,740 --> 00:09:23,060
so I'm going to check if an arrow key is

219
00:09:23,060 --> 00:09:27,820
held down in this case left and if it is

220
00:09:29,980 --> 00:09:33,380
I'm going to move the selected point x

221
00:09:33,380 --> 00:09:40,400
position by some value in this case I'm

222
00:09:40,400 --> 00:09:42,589
picking 30 because it will be a fast

223
00:09:42,589 --> 00:09:45,170
movement and if I modulate that with the

224
00:09:45,170 --> 00:09:47,420
elapsed time it'll be smooth depending

225
00:09:47,420 --> 00:09:48,890
on the performance of the system and

226
00:09:48,890 --> 00:09:51,440
likewise I can do the same for the other

227
00:09:51,440 --> 00:09:53,660
arrow keys I think it's important that

228
00:09:53,660 --> 00:09:54,830
we highlight the currently selected

229
00:09:54,830 --> 00:10:00,650
control point so I'm going to use

230
00:10:00,650 --> 00:10:02,810
exactly the same code as I've done here

231
00:10:02,810 --> 00:10:05,450
except instead of coloring it in red I'm

232
00:10:05,450 --> 00:10:07,570
going to color it in yellow and

233
00:10:07,570 --> 00:10:09,680
obviously I'm going to use the selected

234
00:10:09,680 --> 00:10:11,900
point variable instead of the eye in the

235
00:10:11,900 --> 00:10:16,089
loop let's take a look

236
00:10:17,320 --> 00:10:19,329
so we can see the zero control point is

237
00:10:19,329 --> 00:10:21,190
currently highlighted and I can use the

238
00:10:21,190 --> 00:10:23,410
arrow keys to move it around and if I

239
00:10:23,410 --> 00:10:25,509
use the Z and X keys I can move any

240
00:10:25,509 --> 00:10:31,149
control point that I want so how do we

241
00:10:31,149 --> 00:10:32,860
draw the curve I'm going to create a

242
00:10:32,860 --> 00:10:36,220
function called get spline point which

243
00:10:36,220 --> 00:10:39,819
takes in a value T and returns an XY

244
00:10:39,819 --> 00:10:42,009
coordinate for now I'm just going to

245
00:10:42,009 --> 00:10:45,069
hard-code that is zero zero drawing the

246
00:10:45,069 --> 00:10:47,860
spline is a little tricky and I want to

247
00:10:47,860 --> 00:10:49,389
make sure I'm drawing it behind the

248
00:10:49,389 --> 00:10:52,480
control points remember we're using the

249
00:10:52,480 --> 00:10:54,910
curve to generate an XY position based

250
00:10:54,910 --> 00:10:56,889
on a normalize coordinate so we're going

251
00:10:56,889 --> 00:10:59,139
to issue a 0 to a 1 and it will return

252
00:10:59,139 --> 00:11:02,290
an XY for that point on the curve so

253
00:11:02,290 --> 00:11:06,850
let's create a little for loop which

254
00:11:06,850 --> 00:11:13,329
iterates from 0 to 1 and I'm going to

255
00:11:13,329 --> 00:11:19,329
nibble at it in very small steps and

256
00:11:19,329 --> 00:11:20,500
we'll see that this is actually one of

257
00:11:20,500 --> 00:11:23,050
the downsides of using splines for each

258
00:11:23,050 --> 00:11:25,480
value of T I'm going to call our spline

259
00:11:25,480 --> 00:11:27,160
point function which should return the

260
00:11:27,160 --> 00:11:29,290
XY coordinate and I'm just going to draw

261
00:11:29,290 --> 00:11:33,130
a pixel at that XY coordinate but of

262
00:11:33,130 --> 00:11:33,910
course at the moment

263
00:11:33,910 --> 00:11:36,459
it'll only draw something at 0 0 because

264
00:11:36,459 --> 00:11:38,589
we need to fill in I'll get spline point

265
00:11:38,589 --> 00:11:41,410
function we've only been given the value

266
00:11:41,410 --> 00:11:44,639
of T so we need to create some indices

267
00:11:44,639 --> 00:11:51,339
based around that value T we know for

268
00:11:51,339 --> 00:11:55,899
example if T was say not 0.3 then P 1

269
00:11:55,899 --> 00:12:01,360
would be the floor of T which in this

270
00:12:01,360 --> 00:12:03,760
case would be 0 from there we know that

271
00:12:03,760 --> 00:12:10,540
P 2 is P 1 plus 1 we know that P 3 is P

272
00:12:10,540 --> 00:12:14,560
1 plus 2 and we know that p 0 is P 1

273
00:12:14,560 --> 00:12:17,769
take 1 so let's do exactly that I'm just

274
00:12:17,769 --> 00:12:19,240
going to cast to an integer to do our

275
00:12:19,240 --> 00:12:21,399
floor equation and of course because I

276
00:12:21,399 --> 00:12:22,899
code these things live I've immediately

277
00:12:22,899 --> 00:12:27,730
noticed a mistake it's p 0 1 2 3

278
00:12:27,730 --> 00:12:29,679
we can now start to implement our

279
00:12:29,679 --> 00:12:32,769
equations so I know that I'm going to be

280
00:12:32,769 --> 00:12:34,779
using T squared and T cubed a lot so I'm

281
00:12:34,779 --> 00:12:45,399
going to cash these I'm just going to

282
00:12:45,399 --> 00:12:47,319
take the equations exactly as I had them

283
00:12:47,319 --> 00:12:49,829
in the desmos graphing calculator to

284
00:12:49,829 --> 00:12:53,049
give me four values which are

285
00:12:53,049 --> 00:12:57,129
influential field values to calculate

286
00:12:57,129 --> 00:13:00,249
the result we do it one axis of the time

287
00:13:00,249 --> 00:13:04,079
so I'm going to look at the x axis first

288
00:13:04,079 --> 00:13:06,609
we need to take the point that we're

289
00:13:06,609 --> 00:13:08,410
interested in so in this case the first

290
00:13:08,410 --> 00:13:12,429
one is p0 and we're only looking at the

291
00:13:12,429 --> 00:13:14,769
x-coordinates at the moment and we've

292
00:13:14,769 --> 00:13:16,600
multiplied that by our first field of

293
00:13:16,600 --> 00:13:18,639
influence which was the red line the red

294
00:13:18,639 --> 00:13:21,429
point and then take the next point along

295
00:13:21,429 --> 00:13:24,850
and use our second field of influence

296
00:13:24,850 --> 00:13:28,230
and so on

297
00:13:38,939 --> 00:13:41,860
so the four influential fields are

298
00:13:41,860 --> 00:13:43,629
multiplied by their respective point

299
00:13:43,629 --> 00:13:46,689
locations in the x-axis I can cut and

300
00:13:46,689 --> 00:13:51,339
paste this to do the y-axis and just

301
00:13:51,339 --> 00:13:56,040
change the X components to Y components

302
00:14:01,529 --> 00:14:03,910
instead of returning zero zero will

303
00:14:03,910 --> 00:14:07,119
return txt y there is one final thing to

304
00:14:07,119 --> 00:14:09,639
do if we examine these equations we see

305
00:14:09,639 --> 00:14:11,800
that the influence on the y axis lies

306
00:14:11,800 --> 00:14:13,410
between 0 & 2

307
00:14:13,410 --> 00:14:16,869
we want this to be between 0 & 1 so we

308
00:14:16,869 --> 00:14:20,369
will have all of the values

309
00:14:27,620 --> 00:14:31,370
let's take a look well there's certainly

310
00:14:31,370 --> 00:14:32,630
something on the screen let's see if

311
00:14:32,630 --> 00:14:34,070
it's behaving so I'm going to move this

312
00:14:34,070 --> 00:14:37,550
control point down we can see it does

313
00:14:37,550 --> 00:14:41,690
start to repel some of the curve let's

314
00:14:41,690 --> 00:14:43,340
move this control point over a little

315
00:14:43,340 --> 00:14:46,520
bit okay I'll bring this one round too

316
00:14:46,520 --> 00:14:48,710
so we'll make it look like we had in the

317
00:14:48,710 --> 00:14:52,220
diagram before however there's some

318
00:14:52,220 --> 00:14:54,530
reason it's a dashed line why is this

319
00:14:54,530 --> 00:14:56,990
well that's because we nibble through

320
00:14:56,990 --> 00:14:59,060
the zero to the one in a small increment

321
00:14:59,060 --> 00:15:01,040
and if we're only incrementing in naught

322
00:15:01,040 --> 00:15:03,230
point naught 5 that means really we can

323
00:15:03,230 --> 00:15:05,270
only have 20 pixels between the two

324
00:15:05,270 --> 00:15:07,460
control points and if they're 40 pixels

325
00:15:07,460 --> 00:15:10,310
apart we'll skip every other pixel so we

326
00:15:10,310 --> 00:15:11,750
need to make this smaller let's have a

327
00:15:11,750 --> 00:15:14,860
look that's better

328
00:15:14,860 --> 00:15:17,390
that one curve segment on its own isn't

329
00:15:17,390 --> 00:15:18,950
very impressive so let's add a lot more

330
00:15:18,950 --> 00:15:21,340
points

331
00:15:21,820 --> 00:15:24,890
so here I've added a point every 10

332
00:15:24,890 --> 00:15:28,010
pixels in a straight line we've now got

333
00:15:28,010 --> 00:15:31,280
more than one curve segment so we need

334
00:15:31,280 --> 00:15:32,480
to adjust our drawing routine

335
00:15:32,480 --> 00:15:34,970
accordingly now I take the number of

336
00:15:34,970 --> 00:15:37,790
points in our path and I'm going to use

337
00:15:37,790 --> 00:15:42,500
that to calculate Mike T note that I'm

338
00:15:42,500 --> 00:15:44,150
subtracting a value from them I don't

339
00:15:44,150 --> 00:15:46,850
want to draw the two control points at

340
00:15:46,850 --> 00:15:50,860
the end of the spline let's take a look

341
00:15:51,460 --> 00:15:53,810
hmm something doesn't look quite right

342
00:15:53,810 --> 00:15:57,700
here oh dear let's see why this might be

343
00:15:57,700 --> 00:16:01,670
well our T is going to go above 1 so we

344
00:16:01,670 --> 00:16:03,260
need to modify our get spline point

345
00:16:03,260 --> 00:16:05,540
function to accommodate this and this is

346
00:16:05,540 --> 00:16:07,250
quite simple because we've already got

347
00:16:07,250 --> 00:16:09,290
the floor of our tea to give us our

348
00:16:09,290 --> 00:16:15,770
first control point we just want what's

349
00:16:15,770 --> 00:16:18,280
left over

350
00:16:21,440 --> 00:16:24,540
so our control points will represent one

351
00:16:24,540 --> 00:16:26,850
two three and four and any remainder

352
00:16:26,850 --> 00:16:28,709
that comes in is what we're going to use

353
00:16:28,709 --> 00:16:31,259
to index into the normalize point of the

354
00:16:31,259 --> 00:16:33,470
curve segment this looks a little better

355
00:16:33,470 --> 00:16:43,279
let's move some points around very nice

356
00:16:44,329 --> 00:16:46,709
and so you can see with more control

357
00:16:46,709 --> 00:16:48,329
points we can have quite elaborate

358
00:16:48,329 --> 00:16:52,050
curves let's just take a minute to look

359
00:16:52,050 --> 00:16:54,120
at an interesting property of this here

360
00:16:54,120 --> 00:16:56,339
I've laid out the points in what appears

361
00:16:56,339 --> 00:16:59,759
to be a loop and in fact if I take the

362
00:16:59,759 --> 00:17:01,889
two end points which in this case will

363
00:17:01,889 --> 00:17:05,309
be one and eight and overlap them that

364
00:17:05,309 --> 00:17:06,959
would actually make a loop but it's a

365
00:17:06,959 --> 00:17:08,640
loop with a bit of a kink in it around

366
00:17:08,640 --> 00:17:11,909
the point eight but I can get rid of

367
00:17:11,909 --> 00:17:14,339
that by using the two original end

368
00:17:14,339 --> 00:17:17,010
points and overlapping those with the

369
00:17:17,010 --> 00:17:19,109
two neighboring points which gives us a

370
00:17:19,109 --> 00:17:22,199
nice perfectly curved loop and so if we

371
00:17:22,199 --> 00:17:25,470
wanted our splines to be loops we could

372
00:17:25,470 --> 00:17:27,150
just manipulate the indices when we're

373
00:17:27,150 --> 00:17:28,950
trying to calculate our spline point and

374
00:17:28,950 --> 00:17:30,870
therefore we know that our loop goes

375
00:17:30,870 --> 00:17:33,120
through all the control points if we

376
00:17:33,120 --> 00:17:35,130
want our spline to be looped we have to

377
00:17:35,130 --> 00:17:39,090
treat it differently I'm going to modify

378
00:17:39,090 --> 00:17:41,159
our spline point function if it's not

379
00:17:41,159 --> 00:17:44,720
looped we just do what we did before

380
00:17:44,720 --> 00:17:47,640
which will give us a curvy path but the

381
00:17:47,640 --> 00:17:53,520
ends won't join but if it is looped we

382
00:17:53,520 --> 00:17:56,250
can take our T variable calculate the

383
00:17:56,250 --> 00:17:58,409
indices in a similar way to before but

384
00:17:58,409 --> 00:18:00,659
this time wrap the indices around all of

385
00:18:00,659 --> 00:18:03,299
the points in the vector so let's say

386
00:18:03,299 --> 00:18:04,650
I'm approaching the point towards the

387
00:18:04,650 --> 00:18:06,690
end of the vector I can use the modulus

388
00:18:06,690 --> 00:18:08,970
function to wrap it round to the staff

389
00:18:08,970 --> 00:18:12,090
and likewise if I go below zero I can't

390
00:18:12,090 --> 00:18:13,980
use the modulus function for that but I

391
00:18:13,980 --> 00:18:15,480
can do a little trickery here to give me

392
00:18:15,480 --> 00:18:16,890
the point at the other side of the

393
00:18:16,890 --> 00:18:17,429
vector

394
00:18:17,429 --> 00:18:19,110
you should also modify our drawing

395
00:18:19,110 --> 00:18:20,820
function now to go through all of the

396
00:18:20,820 --> 00:18:22,320
points but we must tell our spline

397
00:18:22,320 --> 00:18:26,789
function that it is loops now let's take

398
00:18:26,789 --> 00:18:30,390
a look well it looks like a straight

399
00:18:30,390 --> 00:18:32,340
line again but as I start to move the

400
00:18:32,340 --> 00:18:33,500
points around

401
00:18:33,500 --> 00:18:37,330
we can see they're certainly joined

402
00:18:44,640 --> 00:18:48,660
nice now we have a facility where we

403
00:18:48,660 --> 00:18:50,730
could control an AI character let's say

404
00:18:50,730 --> 00:18:53,700
for example a spaceship to follow a path

405
00:18:53,700 --> 00:18:56,940
around space and it will look very

406
00:18:56,940 --> 00:18:58,560
natural it won't have to move at right

407
00:18:58,560 --> 00:19:00,600
angles or turn at fixed intervals and

408
00:19:00,600 --> 00:19:03,480
the path can be modified in real time so

409
00:19:03,480 --> 00:19:05,220
with a simple bit of mathematics we can

410
00:19:05,220 --> 00:19:07,290
generate a very natural-looking behavior

411
00:19:07,290 --> 00:19:09,360
but what if we wanted our spaceship to

412
00:19:09,360 --> 00:19:11,760
follow the path precisely for example in

413
00:19:11,760 --> 00:19:14,370
this instance our spaceship is only

414
00:19:14,370 --> 00:19:15,990
getting an x and y coordinate will

415
00:19:15,990 --> 00:19:17,300
always point in the same direction

416
00:19:17,300 --> 00:19:20,010
regardless of where it's up to on the

417
00:19:20,010 --> 00:19:22,260
path instead what we would prefer is

418
00:19:22,260 --> 00:19:24,570
that the spaceship carry on pointing in

419
00:19:24,570 --> 00:19:26,430
the direction of the path depending on

420
00:19:26,430 --> 00:19:29,670
where it is and we can do this by

421
00:19:29,670 --> 00:19:32,250
extracting the gradient at any point a

422
00:19:32,250 --> 00:19:34,260
crude way of guessing the gradient at a

423
00:19:34,260 --> 00:19:36,060
point will be to take it to control

424
00:19:36,060 --> 00:19:38,820
points and create a straight line

425
00:19:38,820 --> 00:19:40,410
between them and that would give us an

426
00:19:40,410 --> 00:19:43,230
approximate gradient maybe but a better

427
00:19:43,230 --> 00:19:45,690
way is to modify our spline equations to

428
00:19:45,690 --> 00:19:47,970
give us a precise gradient in a similar

429
00:19:47,970 --> 00:19:49,590
way that we calculate the position

430
00:19:49,590 --> 00:19:51,890
unfortunately this is very simple indeed

431
00:19:51,890 --> 00:19:54,600
if you remember before we were

432
00:19:54,600 --> 00:19:57,180
calculating our Q values which were the

433
00:19:57,180 --> 00:19:59,010
influential field so we have something

434
00:19:59,010 --> 00:20:04,560
like minus T cubed plus 2t squared take

435
00:20:04,560 --> 00:20:07,320
1 all we need to do is differentiate

436
00:20:07,320 --> 00:20:12,480
this equation which becomes minus 3t

437
00:20:12,480 --> 00:20:19,200
squared plus 4t take 1 and we can do

438
00:20:19,200 --> 00:20:21,510
that for all of our equations so I'm

439
00:20:21,510 --> 00:20:23,490
going to take our entire point function

440
00:20:23,490 --> 00:20:29,760
here and duplicate it I'm going to call

441
00:20:29,760 --> 00:20:33,620
this one get spline gradient

442
00:20:35,880 --> 00:20:37,919
and everything else can remain the same

443
00:20:37,919 --> 00:20:42,289
but I'm going to change these equations

444
00:20:52,200 --> 00:20:54,340
I'll just cut and paste the others in

445
00:20:54,340 --> 00:20:56,590
there we go so let's hack something in

446
00:20:56,590 --> 00:20:58,180
to demonstrate that we can extract the

447
00:20:58,180 --> 00:21:02,860
gradient the agents location is going to

448
00:21:02,860 --> 00:21:04,660
be represented by a variable called F

449
00:21:04,660 --> 00:21:06,760
marker so we need to have some keys so

450
00:21:06,760 --> 00:21:08,200
we can increment and decrement this

451
00:21:08,200 --> 00:21:10,540
variable I'm going to use the a and s

452
00:21:10,540 --> 00:21:13,360
keys to change it but I want to make

453
00:21:13,360 --> 00:21:14,560
sure that I keep control of this

454
00:21:14,560 --> 00:21:15,850
variable so I'm also going to put some

455
00:21:15,850 --> 00:21:18,190
boundary checks in so if the marker

456
00:21:18,190 --> 00:21:20,500
value goes larger than the number of

457
00:21:20,500 --> 00:21:22,890
points in the path then it wraps around

458
00:21:22,890 --> 00:21:25,840
like we did before with these E and X

459
00:21:25,840 --> 00:21:29,170
keys I'm going to draw on our path where

460
00:21:29,170 --> 00:21:31,420
the agent currently stands so to do that

461
00:21:31,420 --> 00:21:33,810
I'm going to get the point on the path

462
00:21:33,810 --> 00:21:36,490
this assumes we're looping at the moment

463
00:21:36,490 --> 00:21:37,540
I'm going to get a point on the path

464
00:21:37,540 --> 00:21:40,120
where the marker location is and I'm

465
00:21:40,120 --> 00:21:42,040
also going to call I'll get gradient

466
00:21:42,040 --> 00:21:45,970
function for the same point to draw the

467
00:21:45,970 --> 00:21:47,950
agent I'm going to draw a line which I'm

468
00:21:47,950 --> 00:21:50,560
hoping is going to be orthogonal to the

469
00:21:50,560 --> 00:21:53,110
path at all points so let's have a look

470
00:21:53,110 --> 00:21:54,910
at this the first thing I do is

471
00:21:54,910 --> 00:21:57,460
calculate the angle of the gradient

472
00:21:57,460 --> 00:21:59,320
returned by the get spline gradient

473
00:21:59,320 --> 00:22:01,390
function so this will return an XY

474
00:22:01,390 --> 00:22:03,100
vector but I'm going to convert it to

475
00:22:03,100 --> 00:22:05,050
radians and I'm going to use the draw

476
00:22:05,050 --> 00:22:06,730
line function which is provided by the

477
00:22:06,730 --> 00:22:09,370
game engine to calculate two points that

478
00:22:09,370 --> 00:22:12,340
are rotated around p1 which is where our

479
00:22:12,340 --> 00:22:15,430
agent is on the path by the angle

480
00:22:15,430 --> 00:22:17,650
represented by the gradient I'm going to

481
00:22:17,650 --> 00:22:20,170
offset these by 5 pixels so I'm going

482
00:22:20,170 --> 00:22:22,060
from one point here which you can see is

483
00:22:22,060 --> 00:22:25,390
a plus 5 to a minus 5 and this will

484
00:22:25,390 --> 00:22:27,160
hopefully give me two points either side

485
00:22:27,160 --> 00:22:29,110
of the path I'm going to draw this blue

486
00:22:29,110 --> 00:22:30,970
let's not also forget that we're working

487
00:22:30,970 --> 00:22:35,100
in loop mode here so let's take a look

488
00:22:35,520 --> 00:22:38,410
well I can see the agent is definitely

489
00:22:38,410 --> 00:22:41,920
orthogonal to the path let's make it our

490
00:22:41,920 --> 00:22:45,270
path a little bit more interesting

491
00:22:48,350 --> 00:22:50,910
it's always very satisfying watching the

492
00:22:50,910 --> 00:22:53,340
curves sort of unfold themselves and we

493
00:22:53,340 --> 00:22:54,960
can see the agent starting to rotate

494
00:22:54,960 --> 00:22:57,690
depending on the orientation of the path

495
00:22:57,690 --> 00:23:00,210
so if I use the ANS keys we can see the

496
00:23:00,210 --> 00:23:02,070
agent follows the path now because I'm

497
00:23:02,070 --> 00:23:03,450
incrementing its position along the

498
00:23:03,450 --> 00:23:11,250
curve then it wraps around very nice so

499
00:23:11,250 --> 00:23:12,630
this video is showing you how to create

500
00:23:12,630 --> 00:23:14,520
a path and spline between all the

501
00:23:14,520 --> 00:23:16,380
control points and I think it's quite

502
00:23:16,380 --> 00:23:18,120
useful for things like a non-player

503
00:23:18,120 --> 00:23:22,049
character ai or animations but there is

504
00:23:22,049 --> 00:23:24,270
still a few things to work out so as I

505
00:23:24,270 --> 00:23:26,669
move my agent around we can see is speed

506
00:23:26,669 --> 00:23:30,870
varies and this is because it assumes

507
00:23:30,870 --> 00:23:32,490
that the distance between all of the

508
00:23:32,490 --> 00:23:35,970
points is the same 0 to 1 we'll come up

509
00:23:35,970 --> 00:23:37,950
with a solution for this in part 2 of

510
00:23:37,950 --> 00:23:40,679
the splines video all of the code for

511
00:23:40,679 --> 00:23:42,330
this video is available on github if

512
00:23:42,330 --> 00:23:43,950
you've enjoyed it please give me a big

513
00:23:43,950 --> 00:23:45,809
thumbs up have a think about subscribing

514
00:23:45,809 --> 00:23:47,490
and I'll definitely see you next time

515
00:23:47,490 --> 00:23:48,929
and I'll definitely see you for part 2

516
00:23:48,929 --> 00:23:52,250
of this video so take care

